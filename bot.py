import os
import logging
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher, types, F
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBHOOK_URL = f"https://date-verification.onrender.com/telegram/webhook"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("bot")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# --- –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Ñ–æ—Ç–æ ---
@dp.message(F.photo)
async def photo_handler(message: types.Message):
    await message.reply("‚úÖ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ù–æ –ø–æ–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç üòâ")

# --- –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–∞ ---
@dp.message(F.text)
async def text_handler(message: types.Message):
    await message.reply(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# --- FastAPI ---
app = FastAPI()

@app.on_event("startup")
async def on_startup():
    await bot.set_webhook(WEBHOOK_URL)
    logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

@app.on_event("shutdown")
async def on_shutdown():
    await bot.delete_webhook()
    await bot.session.close()
    logger.info("‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

@app.get("/")
async def root():
    return {"status": "ok", "message": "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

# –ü–æ–¥–∫–ª—é—á–∞–µ–º aiogram –∫ FastAPI
SimpleRequestHandler(dispatcher=dp, bot=bot).register(app, path="/telegram/webhook")
setup_application(app, dp, bot=bot)
